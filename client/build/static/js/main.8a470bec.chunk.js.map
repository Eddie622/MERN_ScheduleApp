{"version":3,"sources":["components/Display.jsx","components/ScheduleForm.jsx","components/EditSchedule.jsx","App.js","serviceWorker.js","index.js"],"names":["Display","props","useState","all","setAll","showPast","setShowPast","activities","setActivities","fetchActivities","axios","get","then","res","console","log","data","filter","a","Date","start","catch","err","useEffect","toggle","e","className","onClick","map","act","i","key","_id","activity","description","moment","format","duration","units","to","delete","ScheduleForm","setActivity","setDescription","setStart","setDuration","setUnits","errors","setErrors","onSubmit","preventDefault","scheduleItem","post","navigate","type","onChange","target","value","properties","message","EditSchedule","put","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"6RAkEeA,EA7DC,SAAAC,GAAU,IAAD,EAECC,mBAAS,IAFV,mBAEdC,EAFc,KAETC,EAFS,OAGWF,oBAAS,GAHpB,mBAGdG,EAHc,KAGJC,EAHI,OAIeJ,mBAAS,IAJxB,mBAIdK,EAJc,KAIFC,EAJE,KAMfC,EAAkB,WACpBC,IAAMC,IAAI,sCACLC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZT,EAAOS,EAAIG,MAGXR,EAAcK,EAAIG,KAAKC,QAAQ,SAAAC,GAAC,OAAI,IAAIC,KAAKD,EAAEE,OAAS,IAAID,YAE/DE,OAAO,SAAAC,GAAG,OAAIR,QAAQC,IAAIO,OAGnCC,qBAAW,WACPd,MACD,IAEH,IASMe,EAAS,SAAAC,GAEPjB,EADDH,EACeF,EAAIc,QAAQ,SAAAC,GAAC,OAAI,IAAIC,KAAKD,EAAEE,OAAS,IAAID,QAGzChB,GAElBG,GAAaD,IAGjB,OACI,6BACMA,EAAW,4BAAQqB,UAAU,oBAAoBC,QAASH,GAA/C,wBACb,4BAAQE,UAAU,4BAA4BC,QAASH,GAAvD,wBACCjB,EAAWqB,KAAK,SAACC,EAAKC,GAAN,OACb,yBAAKJ,UAAU,YAAYK,IAAKF,EAAIG,KAChC,yBAAKN,UAAU,qCAAqCG,EAAII,UACxD,yBAAKP,UAAU,aACX,2CAAiBG,EAAIK,aACrB,qCAAWC,IAAON,EAAIT,OAAOgB,OAAO,4BACpC,wCAAcP,EAAIQ,SAAlB,IAA6BR,EAAIS,OACjC,kBAAC,IAAD,CAAMZ,UAAU,0BAA0Ba,GAAE,gBAAWV,EAAIG,MAA3D,QACA,4BAAQN,UAAU,qCAAqCC,QAAS,SAAAF,GAAC,OA/BtEO,EA+BiFH,EAAIG,SA9BhGtB,IAAM8B,OAAN,6CAAmDR,IAC9CpB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZJ,OAEHY,OAAO,SAAAC,GAAG,OAAIR,QAAQC,IAAIO,MANpB,IAAAU,IA+BK,iBCWTS,EAjEM,SAAAxC,GAAU,IAAD,EACMC,mBAAS,IADf,mBACnB+B,EADmB,KACTS,EADS,OAEYxC,mBAAS,IAFrB,mBAEnBgC,EAFmB,KAENS,EAFM,OAGAzC,mBAAS,IAHT,mBAGnBkB,EAHmB,KAGZwB,EAHY,OAIM1C,mBAAS,GAJf,mBAInBmC,EAJmB,KAITQ,EAJS,OAKA3C,mBAAS,WALT,mBAKnBoC,EALmB,KAKZQ,EALY,OAME5C,mBAAS,IANX,mBAMnB6C,EANmB,KAMXC,EANW,KAsB1B,OACI,yBAAKtB,UAAU,OACX,0BAAMA,UAAU,uBAAuBuB,SAhBxB,SAAAxB,GACnBA,EAAEyB,iBACF,IAAMC,EAAe,CAAClB,WAAUC,cAAad,QAAOiB,WAAUC,SAC9D5B,IAAM0C,KAAK,qCAAsCD,GAC5CvC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACTA,EAAIG,KAAK+B,OACRC,EAAUnC,EAAIG,KAAK+B,QAEnBM,YAAS,QAEdhC,OAAM,SAAAC,GAAG,OAAIR,QAAQC,IAAIO,QAMxB,yBAAKI,UAAU,cACX,2CACA,2BAAO4B,KAAK,OAAO5B,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAIiB,EAAYjB,EAAE+B,OAAOC,UAC9EV,EAAOd,SAAW,uBAAGP,UAAU,eAAeqB,EAAOd,SAASyB,WAAWC,SAAe,IAE9F,yBAAKjC,UAAU,cACX,8CACA,8BAAUA,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAIkB,EAAelB,EAAE+B,OAAOC,UACxEV,EAAOb,YAAc,uBAAGR,UAAU,eAAeqB,EAAOb,YAAYwB,WAAWC,SAAe,IAEpG,yBAAKjC,UAAU,cACX,wCACA,2BAAO4B,KAAK,iBAAiB5B,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAImB,EAASnB,EAAE+B,OAAOC,UACrFV,EAAO3B,MAAQ,uBAAGM,UAAU,eAAeqB,EAAO3B,MAAMsC,WAAWC,SAAe,IAExF,yBAAKjC,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,2CACA,2BAAO4B,KAAK,SAAS5B,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAIoB,EAAYpB,EAAE+B,OAAOC,QAAQA,MAAOpB,IAC/FU,EAAOV,SAAW,uBAAGX,UAAU,eAAeqB,EAAOV,SAASqB,WAAWC,SAAe,KAGlG,yBAAKjC,UAAU,YACX,yBAAKA,UAAU,cACX,wCACA,4BAAQA,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAIqB,EAASrB,EAAE+B,OAAOC,SAC9D,2CACA,yCACA,4CAKhB,2BAAOH,KAAK,SAAS5B,UAAU,4BAA4B+B,MAAM,uBC+BlEG,EAzFM,SAAA3D,GAAU,IAAD,EACMC,mBAAS,IADf,mBACnB+B,EADmB,KACTS,EADS,OAEYxC,mBAAS,IAFrB,mBAEnBgC,EAFmB,KAENS,EAFM,OAGAzC,mBAAS,IAHT,mBAGnBkB,EAHmB,KAGZwB,EAHY,OAIM1C,mBAAS,GAJf,mBAInBmC,EAJmB,KAITQ,EAJS,OAKA3C,mBAAS,WALT,mBAKnBoC,EALmB,KAKZQ,EALY,OAME5C,mBAAS,IANX,mBAMnB6C,EANmB,KAMXC,EANW,KAQ1BzB,qBAAW,WACPb,IAAMC,IAAN,6CAAgDV,EAAM+B,MACjDpB,MAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZ6B,EAAY7B,EAAIG,KAAKiB,UACrBU,EAAe9B,EAAIG,KAAKkB,aACxBU,EAAST,IAAOtB,EAAIG,KAAKI,OAAOgB,OAAO,qBACvCS,EAAYhC,EAAIG,KAAKqB,UACrBS,EAASjC,EAAIG,KAAKsB,UACnBjB,OAAM,SAAA0B,GAAM,OAAIjC,QAAQC,IAAIgC,QACpC,CAAC9C,EAAM+B,MAyBV,OACI,yBAAKN,UAAU,OACX,0BAAMA,UAAU,uBAAuBuB,SAzBxB,SAAAxB,GACnBA,EAAEyB,iBACF,IAAMC,EAAe,CAAClB,WAAUC,cAAad,QAAOiB,WAAUC,SAC9D5B,IAAMmD,IAAN,6CAAgD5D,EAAM+B,KAAOmB,GACxDvC,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACTA,EAAIG,KAAK+B,OACRC,EAAUnC,EAAIG,KAAK+B,QAEnBM,YAAS,QAEdhC,OAAM,SAAAC,GAAG,OAAIR,QAAQC,IAAIO,QAexB,yBAAKI,UAAU,cACX,2CACA,2BAAO4B,KAAK,OAAO5B,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAIiB,EAAYjB,EAAE+B,OAAOC,QAAQA,MAAOxB,IAC7Fc,EAAOd,SAAW,uBAAGP,UAAU,eAAeqB,EAAOd,SAASyB,WAAWC,SAAe,IAE9F,yBAAKjC,UAAU,cACX,8CACA,8BAAUA,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAIkB,EAAelB,EAAE+B,OAAOC,QAAQA,MAAOvB,IACvFa,EAAOb,YAAc,uBAAGR,UAAU,eAAeqB,EAAOb,YAAYwB,WAAWC,SAAe,IAEpG,yBAAKjC,UAAU,cACX,wCACA,2BAAO4B,KAAK,iBAAiB5B,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAImB,EAASnB,EAAE+B,OAAOC,QAAQA,MAAOrC,IACpG2B,EAAO3B,MAAQ,uBAAGM,UAAU,eAAeqB,EAAO3B,MAAMsC,WAAWC,SAAe,IAExF,yBAAKjC,UAAU,OACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,cACX,2CACA,2BAAO4B,KAAK,SAAS5B,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAIoB,EAAYpB,EAAE+B,OAAOC,QAAQA,MAAOpB,IAC/FU,EAAOV,SAAW,uBAAGX,UAAU,eAAeqB,EAAOV,SAASqB,WAAWC,SAAe,KAGlG,yBAAKjC,UAAU,YACX,yBAAKA,UAAU,cACX,wCACA,4BAAQA,UAAU,eAAe6B,SAAU,SAAA9B,GAAC,OAAIqB,EAASrB,EAAE+B,OAAOC,QAAQA,MAAOnB,GAC7E,2CACA,yCACA,4CAKhB,2BAAOgB,KAAK,SAAS5B,UAAU,4BAA4B+B,MAAM,YAErE,yBAAK/B,UAAU,6BACX,4BAAQA,UAAU,2BAA2BC,QAjD1C,WACXjB,IAAM8B,OAAN,6CAAmDvC,EAAM+B,MACpDpB,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZwC,YAAS,QAEZhC,OAAO,SAAAC,GAAG,OAAIR,QAAQC,IAAIO,QA2CvB,aCjEDwC,MAff,WACE,OACE,yBAAKpC,UAAU,aACb,4CACA,kBAAC,IAAD,CAAMA,UAAU,eAAea,GAAG,KAAlC,YACA,kBAAC,IAAD,CAAMb,UAAU,eAAea,GAAG,QAAlC,gBACA,kBAAC,IAAD,CAAQb,UAAU,QAChB,kBAAC,EAAD,CAASqC,KAAK,MACd,kBAAC,EAAD,CAAcA,KAAK,SACnB,kBAAC,EAAD,CAAcA,KAAK,kBCLPC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhE,MAAK,SAAAiE,GACJA,EAAaC,gBAEdzD,OAAM,SAAA0D,GACLjE,QAAQiE,MAAMA,EAAMpB,c","file":"static/js/main.8a470bec.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\nimport moment from 'moment';\r\n\r\nconst Display = props => {\r\n\r\n    const [all, setAll] = useState([]);\r\n    const [showPast, setShowPast] = useState(false);\r\n    const [activities, setActivities] = useState([]);\r\n\r\n    const fetchActivities = () => {\r\n        axios.get(\"http://localhost:8000/api/schedule\")\r\n            .then(res => {\r\n                console.log(res);\r\n                setAll(res.data);\r\n                // setActivities(res.data)\r\n                // Filter out past dates\r\n                setActivities(res.data.filter( a => new Date(a.start) > new Date()));\r\n            })\r\n            .catch( err => console.log(err));\r\n    }\r\n\r\n    useEffect( () => {\r\n        fetchActivities();\r\n    }, []);\r\n\r\n    const remove = _id => {\r\n        axios.delete(`http://localhost:8000/api/schedule/${_id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                fetchActivities();\r\n            })\r\n            .catch( err => console.log(err));\r\n    }\r\n\r\n    const toggle = e => {\r\n        if(showPast) {\r\n            setActivities(all.filter( a => new Date(a.start) > new Date()));\r\n        }\r\n        else {\r\n            setActivities(all);\r\n        }\r\n        setShowPast(!showPast);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { showPast ? <button className=\"btn btn-info mb-3\" onClick={toggle}>Hide Past Activities</button> : \r\n            <button className=\"btn btn-outline-info mb-3\" onClick={toggle}>Show Past Activities</button> }\r\n            {activities.map( (act, i) => \r\n                <div className=\"card mb-3\" key={act._id}>\r\n                    <div className=\"card-header bg-primary text-light\">{act.activity}</div>\r\n                    <div className=\"card-body\">\r\n                        <p>Description: {act.description}</p>\r\n                        <p>Start: {moment(act.start).format('MMMM Do YYYY, h:mm:ss a')}</p>\r\n                        <p>Duration: {act.duration} {act.units}</p>\r\n                        <Link className=\"btn btn-outline-primary\" to={`/edit/${act._id}`}>Edit</Link>\r\n                        <button className=\"btn btn-outline-danger float-right\" onClick={e => remove(act._id)}>Remove</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Display;","import React, { useState } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\n\r\nconst ScheduleForm = props => {\r\n    const [activity, setActivity] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [start, setStart] = useState(\"\");\r\n    const [duration, setDuration] = useState(0);\r\n    const [units, setUnits] = useState(\"minutes\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const CreateSchedule = e => {\r\n        e.preventDefault();\r\n        const scheduleItem = {activity, description, start, duration, units};\r\n        axios.post(\"http://localhost:8000/api/schedule\", scheduleItem)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={CreateSchedule}>\r\n                <div className=\"form-group\">\r\n                    <label>Activity</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setActivity(e.target.value)}/>\r\n                    { errors.activity ? <p className=\"text-danger\">{errors.activity.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)}></textarea>\r\n                    { errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Start</label>\r\n                    <input type=\"datetime-local\" className=\"form-control\" onChange={e => setStart(e.target.value)}/>\r\n                    { errors.start ? <p className=\"text-danger\">{errors.start.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Duration</label>\r\n                            <input type=\"number\" className=\"form-control\" onChange={e => setDuration(e.target.value)} value={duration}/>\r\n                            { errors.duration ? <p className=\"text-danger\">{errors.duration.properties.message}</p> : \"\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Units</label>\r\n                            <select className=\"form-control\" onChange={e => setUnits(e.target.value)}>\r\n                                <option>minutes</option>\r\n                                <option>hours</option>\r\n                                <option>days</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-success btn-block\" value=\"Add to Schedule\"/>\r\n            </form>    \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ScheduleForm;","import React, { useState, useEffect } from 'react';\r\nimport { navigate } from '@reach/router';\r\nimport axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nconst EditSchedule = props => {\r\n    const [activity, setActivity] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [start, setStart] = useState(\"\");\r\n    const [duration, setDuration] = useState(0);\r\n    const [units, setUnits] = useState(\"minutes\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/schedule/${props._id}`)\r\n            .then( res => {\r\n                console.log(res);\r\n                setActivity(res.data.activity);\r\n                setDescription(res.data.description);\r\n                setStart(moment(res.data.start).format('YYYY-MM-DDTHH:mm'));\r\n                setDuration(res.data.duration);\r\n                setUnits(res.data.units);\r\n            }).catch(errors => console.log(errors));\r\n    }, [props._id]);\r\n\r\n    const UpdateSchedule = e => {\r\n        e.preventDefault();\r\n        const scheduleItem = {activity, description, start, duration, units};\r\n        axios.put(`http://localhost:8000/api/schedule/${props._id}`, scheduleItem)\r\n            .then(res => {\r\n                console.log(res);\r\n                if(res.data.errors) {\r\n                    setErrors(res.data.errors);\r\n                } else {\r\n                    navigate(\"/\");\r\n                }\r\n            }).catch(err => console.log(err));\r\n    };\r\n\r\n    const remove = () => {\r\n        axios.delete(`http://localhost:8000/api/schedule/${props._id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/\");\r\n            })\r\n            .catch( err => console.log(err));\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col-sm-8 offset-sm-2\" onSubmit={UpdateSchedule}>\r\n                <div className=\"form-group\">\r\n                    <label>Activity</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={e => setActivity(e.target.value)} value={activity}/>\r\n                    { errors.activity ? <p className=\"text-danger\">{errors.activity.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description</label>\r\n                    <textarea className=\"form-control\" onChange={e => setDescription(e.target.value)} value={description}></textarea>\r\n                    { errors.description ? <p className=\"text-danger\">{errors.description.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Start</label>\r\n                    <input type=\"datetime-local\" className=\"form-control\" onChange={e => setStart(e.target.value)} value={start}/>\r\n                    { errors.start ? <p className=\"text-danger\">{errors.start.properties.message}</p> : \"\"}\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Duration</label>\r\n                            <input type=\"number\" className=\"form-control\" onChange={e => setDuration(e.target.value)} value={duration}/>\r\n                            { errors.duration ? <p className=\"text-danger\">{errors.duration.properties.message}</p> : \"\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\">\r\n                        <div className=\"form-group\">\r\n                            <label>Units</label>\r\n                            <select className=\"form-control\" onChange={e => setUnits(e.target.value)} value={units}>\r\n                                <option>minutes</option>\r\n                                <option>hours</option>\r\n                                <option>days</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Update\"/>\r\n            </form>\r\n            <div className=\"col-sm-8 offset-sm-2 mt-3\">\r\n                <button className=\"btn btn-danger btn-block\" onClick={remove}>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default EditSchedule;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Display from \"./components/Display\";\nimport ScheduleForm from './components/ScheduleForm';\nimport EditSchedule from './components/EditSchedule';\nimport { Link, Router } from '@reach/router';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Schedule App</h1>\n      <Link className=\"btn btn-info\" to=\"/\">Schedule</Link>\n      <Link className=\"btn btn-info\" to=\"/new\">New Activity</Link>\n      <Router className=\"my-5\">\n        <Display path=\"/\" />\n        <ScheduleForm path=\"/new\" />\n        <EditSchedule path=\"/edit/:_id\" />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}